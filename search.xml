<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>今日更新内容</title>
    <url>/2023/04/28/blog1/</url>
    <content><![CDATA[<p>以下是今天的更新内容：</p>
<span id="more"></span>
<ul class="lvl-0">
<li class="lvl-2">
<p>增加了新成员：wanko（汪酱） 🐶</p>
<blockquote>
<p>但是很遗憾，由于技术有限，没能成功编辑浮空文字</p>
</blockquote>
</li>
<li class="lvl-2">
<p>增加了基于valine平台的评论功能</p>
<blockquote>
<p>但是不知道如何删除评论，所以评论的各位爷要谨言慎行</p>
</blockquote>
</li>
<li class="lvl-2">
<p>更换了Hexo的Markdown渲染引擎，现在可以呈现emoji表情了</p>
<blockquote>
<p>emoji的简码链接： <a href="https://gist.github.com/rxaviers/7360908">简码</a></p>
</blockquote>
</li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>数组的动态联编</title>
    <url>/2023/06/06/blog10-cppDynamicArray/</url>
    <content><![CDATA[<p>  使用数组声明来创建数组时，将采用静态联编，即数组的长度在编译时设置。这个时候如果在括号里使用变量会报错，这样如果想输入数组长度以控制是做不到的：</p>
<span id="more"></span>
<p><img src="https://i2.100024.xyz/2023/06/06/ny90mg.webp#pic_center" alt=""></p>
<p>  如果想创建一个数组，其长度让用户来输入管理，这个时候就需要用<code>new[]</code>运算符创建数组，采用动态联编（动态数组）。</p>
<blockquote>
<p>静态联编：在编译时给数组分配内存被称为静态联编（static binding），意味着数组是在编译时加入到程序中的。</p>
</blockquote>
<blockquote>
<p>动态联编：使用new时，如果在运行阶段需要数组，则创建它；如果不需要，则不创建。还可以在程序运行时选择数组的长度。这被称为动态联编（dynamic binding），意味着数组是在程序运行时创建的。这种数组叫作动态数组（dynamic array）。</p>
</blockquote>
<p>  使用静态联编时，必须在编写程序时指定数组的长度；使用动态联编时，程序将在运行时确定数组的长度。</p>
<p>  了解了这些特性，就可以在程序中这样写：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Put in the number of people:__\b\b&quot;</span>;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="comment">//int Age[num];</span></span><br><span class="line">    <span class="type">int</span>* p_Age = <span class="keyword">new</span> <span class="type">int</span>[num];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;p_Age[&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;] = &quot;</span>;</span><br><span class="line">        cin &gt;&gt; p_Age[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;the age of every person is:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;p_Age[&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;] = &quot;</span> &lt;&lt; p_Age[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span>[] p_Age;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  当输入10赋值给变量num时，接下来就会创建一个长度为10的数组以储存数据。</p>
<p>  当然采用这种方式创建数组的最后需要用<code>delete[]</code>来释放其占用的内存。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>备案与毕业</title>
    <url>/2023/05/13/blog2/</url>
    <content><![CDATA[<p>  经历了长达十多天的备案，终于在昨天过审了。</p>
<span id="more"></span>
<p>  根据规定，这段时间不能访问域名，也就一直没有更新。昨晚九点得知过审后遂启动域名，奇怪的是<code>hexo cl</code>,<code>hexo g</code>都能使用，唯独<code>hexo d</code>一直报错，无法成功部署。</p>
<p>  <code>hexo s</code>本地渲染也没问题，并且在家也没有出现过这种情况，那么猜测就是网络的问题，我想备案的这几天从家里到学校了，网络的影响应该很大。网上找了很多教程，最后搞到凌晨1点，发现断开学校宽带，连手机热点就解决了🤣难绷…</p>
<p>  十几天内，我给网站添加了“关于”板块，用<code>&amp;emsp;</code>进行首行缩进；参与了毕业论文的答辩，也拍了毕业照，本科生涯渐渐以倒数计时，朋友们都在抓紧时间记录、分享以及欢庆。这让我想到高中毕业时，每个人都在留言板上写一句话，我用当时所学的vb语言写了一小段代码，具体内容我难以记起，大致内容就是有一个按钮，按下就可以将系统时间暂停。</p>
<p>  还有一位令人怀念的朋友这样写：</p>
<blockquote>
<p>“明天会更好。”</p>
</blockquote>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题更改引用blockquote以及内嵌代码code的颜色</title>
    <url>/2023/05/19/blog4/</url>
    <content><![CDATA[<h5 id="Next版本：7-8-0">Next版本：7.8.0</h5>
<p>  因为设置了背景，所以往往有统一颜色的需求，此时占比较大的引用和代码的颜色较为明显，如果采用默认颜色会比较难看。在相同Next主题和版本下，可以这样设置：</p>
<span id="more"></span>
<ul class="lvl-0">
<li class="lvl-2">
<p>块引用</p>
</li>
</ul>
<p>  首先cd到<code>..\next\source\css\_common\scaffolding</code>找到<code>base.styl</code>文件，打开ctrl+F搜索blockquote，对代码进行如下编辑：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#d0a7020d</span>;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#d0a702</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--blockquote-color);</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">cite</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中background是引用块的背景颜色，border-left即左边粗竖线的颜色，对#后面改成自己喜欢的颜色后重新部署即可。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>内嵌代码</p>
</li>
</ul>
<p>  cd到<code>..\next\source\css\_variables</code>找到<code>base.styl</code>文件，打开找到code-background，同样将后面的颜色进行修改即可。</p>
<p>  由于我还没有设置图床，就不放图片演示了😶</p>
<p>  最后，如果版本不一致，也可以用开发者工具找到源代码进行修改。</p>
]]></content>
      <categories>
        <category>经验</category>
        <category>Next美化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo d错误：spawn failed的一种解决方法</title>
    <url>/2023/05/15/blog3/</url>
    <content><![CDATA[<p>  继上一条，这几天内部署断断续续的报错，网上的教程都不适用，和朋友交流后终于有了一个稳定的解决方法。</p>
<span id="more"></span>
<p>  报错内容大概是这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Please make sure you have the correct access rights</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt;(D:\Blog\node_modules hexo-util\lib\spawn.js:51:21)</span><br><span class="line">    at ChildProcess.emit (node:events:513:28)</span><br><span class="line">    at cp.emit (D:\Blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at ChildProcess._handle.onexit (node:internal/chid_process:291:12)</span><br></pre></td></tr></table></figure>
<p>  确定是网络的原因后，可以作如下尝试：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>获取steam++这款软件（github可以搜索到，也有其他选择）</p>
</li>
<li class="lvl-2">
<p>打开steam++并加速github</p>
</li>
<li class="lvl-2">
<p>命令行输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:443</span><br><span class="line">git config --global https.proxy http://127.0.0.1:443</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-2">
<p>最后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>应该就能成功了🥰</p>
</li>
</ul>
<p>  这篇文章希望给一些同样有该问题但网上教程都不适用的朋友一点参考。</p>
]]></content>
      <categories>
        <category>经验</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构note（一）</title>
    <url>/2023/06/09/blog11-DS1/</url>
    <content><![CDATA[<h1>1.1 什么是数据结构？</h1>
<blockquote>
<p>“数据结构是数据对象，以及存在于该对象的实例和组成实例的数据元素之间的各种联系。这些联系可以通过定义相关的函数给出。”——Sartaj Sahni.</p>
</blockquote>
<span id="more"></span>
<ul class="lvl-0">
<li class="lvl-2">
<p>解决问题方法的效率，跟数据的组织方式有关</p>
</li>
<li class="lvl-2">
<p>解决问题方法的效率，跟空间的利用效率有关</p>
</li>
<li class="lvl-2">
<p>解决问题方法的效率，跟算法的巧妙程度有关</p>
</li>
</ul>
<h3 id="抽象数据类型">抽象数据类型</h3>
<ol>
<li class="lvl-3">
<p>数据结构（比如C++里的class）：</p>
<ol>
<li class="lvl-6">
<p>数据对象集</p>
</li>
<li class="lvl-6">
<p>数据集合相关联的操作集</p>
</li>
</ol>
</li>
<li class="lvl-3">
<p>抽象：</p>
<ol>
<li class="lvl-6">
<p>与存放数据的机器无关</p>
</li>
<li class="lvl-6">
<p>与数据存储的物理结构无关</p>
</li>
<li class="lvl-6">
<p>与实现操作的算法和编程语言均无关</p>
</li>
</ol>
</li>
</ol>
<h1>1.2 什么是算法？</h1>
<ul class="lvl-0">
<li class="lvl-2">
<p>一个有限的指令集</p>
</li>
<li class="lvl-2">
<p>接受一些输入（或不需要）</p>
</li>
<li class="lvl-2">
<p>产生输出</p>
</li>
<li class="lvl-2">
<p>在有限步骤后终止</p>
</li>
<li class="lvl-2">
<p>每条指令必须</p>
<ul class="lvl-2">
<li class="lvl-4">
<p>有充分明确的目标，不可以有歧义</p>
</li>
<li class="lvl-4">
<p>计算机的处理能力范围内</p>
</li>
<li class="lvl-4">
<p>描述不依赖计算机语言和具体实现手段</p>
</li>
</ul>
</li>
</ul>
<h3 id="什么是好的算法？">什么是好的算法？</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>空间复杂度$S(n)$</p>
</li>
<li class="lvl-2">
<p>时间复杂度$T(n)$：$O(\log n)\le O(n)\le O(n\log n) \le O(n^{2}) \le O(2^{n})\le O(n!)$</p>
<ul class="lvl-2">
<li class="lvl-4">
<p>若两段算法分别有复杂度$T_1(n)=O(f_1(n))$和$T_2(n)=O(f_2(n))$，则：</p>
<ul class="lvl-4">
<li class="lvl-6">
<p>$T_1(n)+T_2(n)=\max(O(f_1(n)),O(f_2(n)))$</p>
</li>
<li class="lvl-6">
<p>$T_1(n)\times T_2(n)=O(f_1(n)\times f_2(n))$</p>
</li>
</ul>
</li>
<li class="lvl-4">
<p>一个for循环的时间复杂度等于循环次数乘以循环体代码的复杂度</p>
</li>
<li class="lvl-4">
<p>if-else结构的复杂度取决于if的条件判断复杂度和两个分支部分的复杂度，总体取三者中最大</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>更新Next主题：v7.8-&gt;v8.16</title>
    <url>/2023/05/26/blog6/</url>
    <content><![CDATA[<p>  由于需要换valine为waline或twikoo，以及各种由于Next版本低导致的问题（相关的网络资源少、教程少等等），今天下定决心更新一下版本。</p>
<span id="more"></span>
<h4 id="Hexo-version-6-3；Next-version-7-8">Hexo version: 6.3；Next version:7.8</h4>
<p>  知道更新版本有一定的风险，于是做好了旧版本的备份。最终没有太大的损失，只是先前自定义的一些样式由于文件发生改变而失效，这些会在后续重新补充。</p>
<p>  更新版本参考教程：<a href="https://drifter-games.com/2021/nextupdate/">https://drifter-games.com/2021/nextupdate/</a></p>
]]></content>
      <categories>
        <category>经验</category>
        <category>Next升级</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next鼠标指针自定义</title>
    <url>/2023/05/27/blog7/</url>
    <content><![CDATA[<h4 id="准备材料">准备材料</h4>
<p>  <code>.cur</code>或者<code>.ico</code>文件，不能太大（我试过超过1MB的素材不可用），<code>.ani</code>动态光标没试成功过。这些资源可以在<a href="https://zhutix.com/tag/cursors/">致美化</a>等途径中找到。</p>
<span id="more"></span>
<p>  这些文件建议下载到<code>../themes/source/images</code>中，也可以不下载而采用cdn。</p>
<p>  这里Next版本为8.16。</p>
<h4 id="文件修改">文件修改</h4>
<p>  在<code>yourBlog/themes/next/source/css/_common/scaffolding</code>中找到<code>base.styl</code>，对里面的代码行进行编辑：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">+ <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/yourArrow.cur), auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--body-bg-color);</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--text-color);</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$font</span>-family-base;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font</span>-size-base;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="variable">$line</span>-height-base;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">transition</span>: padding <span class="variable">$transition</span>-ease;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  在添加的这行代码里将<code>yourArrow.cur</code>改为下载的素材名即可。这个地方一般是放指针型鼠标，下面还有一个区域需要编辑：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">+ <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/yourHand.cur), auto<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$link</span>-decoration-color;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--link-color);</span><br><span class="line">  <span class="comment">// For a:not(:any-link)</span></span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  这个位置一般放的是手型鼠标，也就是将鼠标悬在链接上会变化成的手型样式，同样将<code>yourHand.cur</code>改成下载的素材名。</p>
<h4 id="重新部署">重新部署</h4>
<p>  修改后可以先在本地看看效果，如果成功，最后hexo三件套即可。</p>
<p>下面再附上很多博客在用的鼠标指针cdn：</p>
<blockquote>
<p><a href="https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071208706.cur">https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071208706.cur</a><br>
<a href="https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071205091.cur">https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071205091.cur</a></p>
</blockquote>
<p>对应指针型和手型，效果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071208706.cur" alt="Arrow"></p>
<p><img src="https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201071205091.cur" alt="Hand"></p>
<p>用法就是将url括号里的链接替换为上述链接。</p>
]]></content>
      <categories>
        <category>经验</category>
        <category>Next美化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>C++文本操作：文本文件的读写</title>
    <url>/2023/05/30/blog8-cpptxtwrite/</url>
    <content><![CDATA[<h3 id="写文件">写文件</h3>
<ol>
<li class="lvl-3">
<p>包含头文件：<code>#include &lt;fstream&gt;</code></p>
</li>
<li class="lvl-3">
<p>创建流对象：<code>ofstream ofs;</code></p>
<span id="more"></span>
</li>
<li class="lvl-3">
<p>打开文件：<code>ofs.open(&quot;Url&quot;,打开方式)</code></p>
<p>（如果路径处只写了文件名，则会保存在同级文件夹下）</p>
<table>
<thead>
<tr>
<th style="text-align:left">打开方式</th>
<th style="text-align:left">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ios::in</td>
<td style="text-align:left">为读文件而打开文件</td>
</tr>
<tr>
<td style="text-align:left">ios::out</td>
<td style="text-align:left">为写文件而打开文件</td>
</tr>
<tr>
<td style="text-align:left">ios::ate</td>
<td style="text-align:left">初始位置为文件尾</td>
</tr>
<tr>
<td style="text-align:left">ios::app</td>
<td style="text-align:left">追加方式写文件</td>
</tr>
<tr>
<td style="text-align:left">ios::trunc</td>
<td style="text-align:left">先删除，再创建</td>
</tr>
<tr>
<td style="text-align:left">ios::binary</td>
<td style="text-align:left">二进制方式</td>
</tr>
</tbody>
</table>
</li>
<li class="lvl-3">
<p>写数据：<code>ofs &lt;&lt; &quot;写入的数据&quot;</code>（可以加入<code>&lt;&lt; endl;</code>来换行）</p>
</li>
<li class="lvl-3">
<p>关闭文件：<code>ofs.close();</code></p>
</li>
</ol>
<h5 id="示例：">示例：</h5>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span><span class="comment">//1.头文件的包含</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//2.创建流对象</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.指定打开方式</span></span><br><span class="line">    ofs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::out);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.写内容</span></span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;姓名：张三&quot;</span> &lt;&lt; endl;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;性别：男&quot;</span> &lt;&lt; endl;</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;年龄：18&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;写入成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="读文件">读文件</h3>
<ol>
<li class="lvl-3">
<p>包含头文件：<code>#include &lt;fstream&gt;</code></p>
</li>
<li class="lvl-3">
<p>创建流对象：<code>ofstream ifs;</code></p>
</li>
<li class="lvl-3">
<p>打开文件并判断是否成功打开：<code>ifs.open(&quot;Url&quot;,打开方式)</code></p>
<p>（判断打开方式见代码）</p>
</li>
<li class="lvl-3">
<p>读数据：有四种方式，各有特点</p>
</li>
<li class="lvl-3">
<p>关闭文件：<code>ifs.close();</code></p>
</li>
</ol>
<h5 id="示例：-v2">示例：</h5>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span><span class="comment">//1.包含头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//2.创建流对象</span></span><br><span class="line">    ifstream ifs;</span><br><span class="line">    <span class="comment">//3.打开文件并判断是否打开成功</span></span><br><span class="line">    ifs.<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, ios::in);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ifs.<span class="built_in">is_open</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//4.读数据</span></span><br><span class="line">    <span class="comment">//第一种（C风格字符串1）</span></span><br><span class="line">    <span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line">    <span class="comment">//while (ifs &gt;&gt; buf) &#123;</span></span><br><span class="line">    <span class="comment">//    cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二种（C风格字符串2）</span></span><br><span class="line">    <span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line">    <span class="comment">//while (ifs.getline(buf, sizeof(buf))) &#123;</span></span><br><span class="line">    <span class="comment">//    cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第三种（CPP风格字符串）</span></span><br><span class="line">    <span class="comment">//string buf;</span></span><br><span class="line">    <span class="comment">//while (getline(ifs, buf)) &#123;</span></span><br><span class="line">    <span class="comment">//    cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第四种（单字符）</span></span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> ((c = ifs.<span class="built_in">get</span>()) != EOF)<span class="comment">//EOF=end of file</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.关闭文件</span></span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>E5 86 99 E7 BB 99 E6 96 BD E5 98 89 E8 B1 AA</title>
    <url>/2023/06/18/linbiezengyan/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不太对捏" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7a5e939dbee177c124444d4e5070c2254d4bca5d513f53111bde3cf0c9d40b6e">e80960072eee56390c5704dab6ba0fae854db6dc0f835e374d2013bd94f4e08446a64f0f00b2e823f15c8b4d25422063807c03848af83195d447827db04ea04c11f9e6cc59be5ced9772478f31e7921bab1b8072bca090176edb64c256d9cb08a1f96d5ed9b3865957b5d4689104d11090373b5e76163d612ba0a36891740765c1976f7277f59c5c593087238d40e9ad126c850392c1457fba027cf9c2a5d391274fb74d1a71c88dd02079dc9ba0e8d3ba6ffb414c63ac7298933baa06914741b58cd643218b85dabea50b61721c9265e249e2cc655263fc7dba5889c6aa83961ae314b4ce348a9c59e61c62a21064d3715eae3030b120994e20db3ebe15a7aa3d47c3e029a1d39a8e5c4f5bb57ece3ed42b28d11a171889b742788de07eba7dd9c27fdaff27119bd9f2dc396b1727a43af4c74841f20404d72bad8b8796ac6b8c121d488a69671570633d672c8585176a925e5eba9b1e3e4a675245b1871ce768e50d32debef7cb7033071129ec4bf98cc6a5e30f89281fa26658821f7e3a5d5cdaf1669f909e20ddbfd0be7d07f7da4b9f9adb71127ab03e6e744ebe499ed02fdbdfff21af8aae11efaf5497386c1a34782e0bad69bb8710f43813154e0d22eff26a030f4d47aa28f1596ae6c05f4d6a50ce21af7ef75f9c0fcdd8bc3af04a8f83e5e527d151eae69bd9e7455ddaaa2af222fe1df8025142df6094b10da56bfffa6dc1e8c043a59683c2518f9d0683b2623192fb756538fcdcb6677cd75f6f16959d3b6127282d39c41ae0ef4291bf010aadf09eea0977acfeb11e023399be4814cbd46a09cc259ce2c83c7a27d43158b4e6ade8360db8a15744ebd4e0c8309dc37c45d5292806e6fe1abe26ce08adc466d893da7abb45906e104b3cf72e089f1dda74449cae8943ca379b30063102f86c392ee6bcadbc02d82bbc90ed1ac84aa560abcc83f44cf73276b73c0978509510d49b2302df463f08a234da96a77f274da4276a636ccc6321c7dedb31d1dfd48e5aac3dea1f9c633e48e497ab60f225ce4a47ae0415f348e508a49af8130961705489bb0f4df1b98b0fd79c791e7c96f3c562adc37a7b614045dda449ca08167038b3afa350af25f4ece3e34b49f0c84b72fc35f1ba2ea4e8f80190b994e508d48f7456215381dfe40d11159f1eba61681de87770f50a3628fb948538415ede7bc0d8f2f0b4306d28ada047b173791c743bc27d78beac7e1cb37aceaeb7d2930e2f0c778f1aeab90f7ee73ed408f724022367cc5bea018a4077af1fe23059ef7a039857f5d8d3bd30bdbe40c6953d392779b14d92cc5a41217a36425cd025ba1bc397664f2927af07a3fa92dceb341b1629cd8f1d7f20291afbc42811fb276a07b19498be01fb2a26235fe14303ca1e0b2639247a5ded8c4891e45d247bcf6cc2975c7befeffa21913de8263850ffa0faab433403b100dcc8bdca0798514e38c1848cfbec253f72b510de6383fe5b46719e267b2fabc3cea735cce81474a727945247347cce14714f19e22b75021f8d56d7b6b95a43c19e4682b151f73e6a273d8e3b1db235d3897d81f374fe1c183c0a52b256d6f0c98aa650c7bfdbcf62b7096d9a510d0120e4f957a3f6c3c09a203b8b6aee2d773d28a31e8bb93d083e963cef037d407abca14fc6bb3f5212e92a50fd36bb1cc6b5d85f3c80fc68f0f6adb997f3d0e4986132d4c7781c2aedee4c72b3170218e2e7fa3c66f4d079b6a5471b84a8fe07904d9289c535f9d9be0b85944fa36e7cb7e9d024eaf5222b1d91e6b5e124dbba1080d325533470510479fa23dc405e677a739311f5af3b1b5d1b9510d70b9e0fdb6448b0ac018448803806ff35a5be4c8e432bf554a640eb678d7cf05e8965fb60139b07328e3a6e68b2520c440b94fce46e0f067ae2bdc58ac61626adc33d74e5aaf94530252c891c2701ba572109f31371827ac92fd66ddda68d881584e52134a79783355da4af260e17bebc120e25a433b315d4a8764280bb7e77e0f5a9dc023b53416a466c6f851afe90931a40db98feae2cdb7a4e2bf762cc561eb748004affdef0aeb8f5ebc5fa4dbcc028d70223bbc773b1a7b5947b24d45764564128c4c978bd18e578a5a0ab12331c6038f5ed1bb1fbb9c2f8c49d027d603baadc78490a930d93764793b4d83ff93dd7acdb21e6afc7e1a69a5d34afe0e6fb2929f84421d3cf8b0a41079ed75ee498e7e7fff47f009175b37a55fd41397e43dc29c077ed31f03c991e9c2a1205b6998f850544de3817a970df4b3c97eba5d168ad549e2d807cfac1a52569f78e8f1a67917483662e839a2b704f2abc27f48ee1ceb2901e3b4e8c3e7caaed8f82486ce2ccc3019563624841889b41d4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一个加密内容，需要密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>临别赠言</category>
      </categories>
      <tags>
        <tag>加密内容</tag>
      </tags>
  </entry>
  <entry>
    <title>响应式Bilibili视频代码块测试</title>
    <url>/2023/05/24/blog5/</url>
    <content><![CDATA[<p>  首先在b站点击分享，复制嵌入代码，再按照如下格式编辑：</p>
<span id="more"></span>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=986143204&amp;bvid=BV1Ft4y1A73f&amp;cid=851363812&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>下面是测试的效果：</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
    <iframe src="//player.bilibili.com/player.html?aid=986143204&bvid=BV1Ft4y1A73f&cid=851363812&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>
]]></content>
      <categories>
        <category>经验</category>
        <category>Next美化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>更改waline主题颜色</title>
    <url>/2023/06/03/blog9-stylDIY/</url>
    <content><![CDATA[<p>  之前就想自定义waline的样式以适配当前的背景图，但又因为没学过css，也不会自己上传cdn，所以向waline的开发者求助，最后知道了<code>!important</code>大法，希望能给到和我一样没接触过css的博主一些参考。</p>
<span id="more"></span>
<ul class="lvl-0">
<li class="lvl-2">
<h3 id="修改主题配置文件">修改主题配置文件</h3>
</li>
</ul>
<p>  在<code>.../next</code>下的<code>_config.yml</code>文件中搜索<code>custom file paths</code>，这是自定义文件的路径，将<code>#style: source/_data/styles.styl</code>前面的<code>#</code>去掉，并且到这个路径下创建对应的文件夹和文件，这样可以在<code>styles.styl</code>中自定义样式并覆盖主题的样式，并且方便后续的维护和更改。</p>
<ul class="lvl-0">
<li class="lvl-2">
<h3 id="定位到需要修改的样式">定位到需要修改的样式</h3>
</li>
</ul>
<p>  在自己的博客页面检查需要修改的元素，比如我要修改waline的按钮颜色，那么右键按钮检查就可以调出开发者工具：</p>
<p><img src="https://i2.100024.xyz/2023/06/03/qrzy72.webp#pic_center" alt=""></p>
<p><img src="https://i2.100024.xyz/2023/06/03/qrzydi.webp#pic_center" alt=""></p>
<p>可以看到这个按钮的样式代码，发现这里的颜色统一采用了一个全局样式<code>--waline-theme-color</code>，如果能将这个元素覆盖掉，那就不用一一修改了。</p>
<p>  将鼠标悬浮到这个按钮后是另一个颜色，这里查看源代码可以看到悬浮时的样式：</p>
<p><img src="https://i2.100024.xyz/2023/06/03/qyh9ep.webp#pic_center" alt=""></p>
<p>在<code>active</code>处同样采用了一个全局颜色<code>--waline-active-color</code>，那么要做的就是把这两个颜色覆盖掉。再进行查找可以找到全局声明：</p>
<p><img src="https://i2.100024.xyz/2023/06/03/qrzvws.webp#pic_center" alt=""></p>
<p>这里就包含了主题原来的颜色。由于我已经进行了修改，所以图片显示的是已被覆盖的样子。</p>
<ul class="lvl-0">
<li class="lvl-2">
<h3 id="important覆盖样式">!important覆盖样式</h3>
</li>
</ul>
<p>  由于waline插件的import采用的是官方提供的cdn，想要在本地修改样式就需要以覆盖的形式。这里我们打开开始所创建的<code>styles.styl</code>，在里面写入：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--waline-theme-color</span>: <span class="number">#4b3425</span> !important;</span><br><span class="line">  <span class="attr">--waline-active-color</span>: <span class="number">#9c8877</span> !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>颜色改成需要的颜色即可。</p>
<p>  效果可以参考评论区，修改全局样式的好处就是可以做到很方便的统一：</p>
<p><img src="https://i2.100024.xyz/2023/06/03/rah08z.webp#23pic_center" alt=""></p>
<p>  可以看到在后面加入<code>!important</code>后，此声明将覆盖任何其他声明。但是这样做会破坏样式表中的固有的级联规则，使得找bug变得困难，所以不推荐大量使用，有条件的还是建议自己将官方css文件进行修改并上传cdn导入自己的主题。</p>
]]></content>
      <categories>
        <category>经验</category>
        <category>Next美化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Css</tag>
      </tags>
  </entry>
  <entry>
    <title>E5 86 99 E7 BB 99 E5 BE 90 E8 BF 9B E5 B9 B3</title>
    <url>/2023/06/18/linbiezengyan1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不太对捏" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a2a6a4f54239b08c2a35d71290ca5e93f33c5c0a34518647e4a8f7f838e98137">65735b815448ad3a63446ef12ba35639330eb3e3b37cd7a17fb2f2c0c867a0e05e21f825603638338db11dd61e6de0e4343d4c7fd577c1e4a0d20aa95bde770060beb77c3eb135578c065f70508d42d04403ed9e8a6884a333a7128c8074971e28f83015cfaafb293c5b92a7a080c2d4c41bec5aa4fe54fdcb438184384c385e9b803992c2e3a0b9a0ea5c871a81a10b15c4933166a4117e3aefe7d20de7b1404379a05364f1a1b7584360f255a75fd3dce80574732e58021c7256271e60e988a404b3125f0f57b0fc3ec2c7f9a4b6eda498259cc73d7e71721862ce3714351eea19a746bd8f2df8b1ad7617e4c89499748710c211745fbfd505da2c1d6db22f337b530b29c0419ba18df7c9495ba769de429250e12e54efe17a73e0a6f03e80eac0b724bb1d0e6f81262adb64ee45bced1a72ee7056d65281f490710333ccddbd6eb10966299e7d92f624e6bb17bb649c2032cbafb056a230db197484d4687b494be916353461dfa16babdb5ac37ddf7e26c6c758607aef3ab4b06e87860c33e6d0bdd288ee4416111b21a09573317f6b662e9f670431283b06734cb25018d9cc90de62f53a362bf6a37c439e5d761c8363bebc48710d0c3f2ed469fd3d4db8c716900746402f4df31bc30f009824fadea47cb4f0570c16096c4232219f1b89589dad0cb1352dffd376f220516199973b349cd4dea769a9cbc2b068e4378c404ff385d8da3fe16262fc71fa1eaeb2860101228ec5f7023b31a1f986c7d8c1c1f1ad0e6db959cb049ae5021de01bdf123d3ddd5d0e81c60db40c06f58ea1363dcab0305e062335b6bdb40dd30ecbadc6d2d640df2522d2f8abbd2dd0915ddfe6d3a17ee352b42fd65343f4cb72a8323c65a4472822b29e3a0012a1386c5fe8f6a59953473eee900e2c0f6d667d80cf14a8411d948c0a489c03e86282253a2c7fcf26fbe60bb8cfa157294e4b3cd863ec94392dc9f985a8e3f79c9b659de9dd3478e1b00cee8af17ea6feb7f982cbbc77d949d13119e53a21700f211b8546c83bbb554d21d11d3e5951ceb909008a2bdd2006ed748ef9639ac362a7b11bb853feed961961d523a9d900dbbacffa3e1aa7c7c49cb1a6e01041eb3471f3811fcb858fa19c296193b2328e1841af2c87b4ab9287e5d181aadfb3cdda3d6d535d785f0a3e27822f2b06ce448f572bfde45578bc7d2ee65a642cc0cfe5ec05a4ae5024b2823af07f93f75864727019880fb9f7ad78ead1493fc5d5febca0620eb3b0915b0fcef0d02b9a5e3fa9087de7f843df73c81ca0675a7a506c0852265640189159427b2afc805f584c60824633f0e1ed5525782cef841d187dffa47c5ddc7e29373d16ef107a88e6c7f42de9b5abec3e4bc214f98c8bc6fc667271803dd2054e06b2951305fa39385df73c001a6f7a293282d397b95dfaedcd66d467fb4356b892276cd8e5e9044452283913b80773b07eeb96ed22c24690bb90103677b04332</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一个加密内容，需要密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>临别赠言</category>
      </categories>
      <tags>
        <tag>加密内容</tag>
      </tags>
  </entry>
  <entry>
    <title>E5 86 99 E7 BB 99 E9 A1 BE E6 98 AF E7 94 B3</title>
    <url>/2023/06/18/linbiezengyan2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不太对捏" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="15cfbd87b87bb6f58699d81bed622094af91e9e2c834ae3fd7a65bc4e1f4f3ad">ff237e079a879a02e65405b26b486dd1529cd862ab8dfd048115e1c94775c41337517e9f2dec349b0966dc56c310a4a4467f0c6c33fcbb3f50c6a37c8421136192876c9cf989e8fdd54a428b3063ecf106bda2a143d0c249448fff0b774d9b0f7bcd25d7317d0b870c545ac71bbe62dd7bbbe694fe7ee79f79d5499baab02dd72a1367d60ea463707b4130651e3005dabfe877b5d59439fef114b1bb2908b20250df4c3918db950a37fa9dd5cb65c1cd38ab538b3581ca5938aa0a156880008ca5f1c4769b2fb95bf4d84f0defceeb9fca992d1f8977090f5503af32ca3ed0f9b9858943429f4cfb6bf70b7189dd5b57be65868cd30426bfcb7580b41ea026958c07aa197e167218172285dad3a897405e429d7d85475853121a2fd13b4fa12d492e044a911cfd799bbb61d41d29642a6c1445d3d431880e7b6927f7ebd9799974b560c9a5106ee4f82c4b9ad9d3059c00575d4b91febaea3a41f64059626e135a5058db2540eba6d4adfbdd940e1b613d2e6c1f1aed16c42a7cba2e137050860faf7096b9d1c7ee5e4c84f2dcdf4c53895eb087fad9fac7bfb415cbe058a7a944c57a3550c27b631542772c4dced82fbb5a0dc6b728c61f42579ac08e71085644d8ebc1ac80c16a07cbae690a4350f73660a658c13b4ec717b3641b701937068724eb3be387b49e512de2c63754a4c97d1a8abe1df1a8da6835dd697f197f596357e287e2ffe367d3a7e4fb8cc60def0600bf965be382d79c39d0500928ec072fdcaccbb785b77ff1eb4cdf3ee2ac36405ac6c710b3596405948e6483bd3059258ffb446218005f995ba349840f838cf7d243dd4c81a7781fc9c15b5bfdd4b7859421117994240fcdbb99c7e96e6c260f487106f365475397f8708e4df0ba849fddf522f709374d0aa3a3cf69ff46d9e860918ea57557375d2d25611e30df37fcd20dcf8f9131716aaeeafc33d1d714199acfee6719a958c7d73ab784d9eb0071d813347e9ab83aa06bc5250e2f0c88cca4bf23b6921d6976e177d1a323da55529f62f81b50c818a79a69f8b12d13c1808dd6d1254266c8d5792c5eb0e09c03056645cb905625bb83b54db6a8034564770adedd51d926aa5248d67e2e9f1be1a7d034aed054f045d84ba41ba3e2ded3fef6c9c491683978d3be275ae2b1de6d720286e6b660f21815c3ff0b25771d3484d987cf6034e13f4a1064eea2c58ebd86540c9eae96489423962aa03f8498990abafa6a2cd8577e79177b75497a7b7ea478556e19971b5873b3476418ae2bf3cfe594f765d877a821c76471085fc095b0106edcb3a4a6ec49db8d7eafd209766bb3fd93acf7f361b2bc26dfc419f3d619275331b7e179164d867f77bec53feb60e66de7bb11862f74642df20f55443b750388508632853fdb8a2c43bd6c3141</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一个加密内容，需要密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>临别赠言</category>
      </categories>
      <tags>
        <tag>加密内容</tag>
      </tags>
  </entry>
  <entry>
    <title>my first post</title>
    <url>/2023/04/27/test/</url>
    <content><![CDATA[<h1>你好</h1>
<h2 id="这是我的第一篇个人博客">这是我的第一篇个人博客</h2>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Hello World!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Le vent se lève, il faut tenter de vivre</p>
</blockquote>
<p>have fun 😃</p>
]]></content>
      <categories>
        <category>经验</category>
      </categories>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
</search>
